[gd_scene load_steps=9 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://2D_Grass_Instancing/pixel_art_grass_spritesheet.png" type="Texture" id=2]
[ext_resource path="res://2D_Grass_Instancing/random_noise.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D spritesheet;
uniform sampler2D random_noise : hint_black;
uniform sampler2D wind_noise : hint_black;

uniform int frames = 4;
uniform vec4 top_color : hint_color = vec4(0.2, 0.8, 0.0, 1.0);
uniform vec4 bottom_color : hint_color = vec4(0.15, 0.6, 0.0, 1.0);
uniform float wind_scale = 1.0;
uniform float wind_speed = 0.1;

uniform vec2 player_pos = vec2(0.0);
uniform float player_radius = 20.0;
uniform float player_radius_blend = 10.0;

vec2 rotateUV(vec2 uv, float rotation, vec2 mid){
	float cosAngle = cos(rotation);
	float sinAngle = sin(rotation);
	return vec2(
		cosAngle * (uv.x - mid.x) + sinAngle * (uv.y - mid.y) + mid.x,
		cosAngle * (uv.y - mid.y) - sinAngle * (uv.x - mid.x) + mid.y
	);
}

varying vec2 world_pos;
varying float player_mask;
void vertex(){
	world_pos = INSTANCE_CUSTOM.xy;
	
	// Wind
	float wind = texture(wind_noise, world_pos * wind_scale + TIME * wind_speed).r;
	wind = wind * 2.0 - 1.0;
	
	// Player interaction
	float player_distance = distance(world_pos, player_pos);
	float pm = smoothstep(player_radius, player_radius + player_radius_blend, player_distance);
	player_mask = pm;
	vec2 pd = normalize(world_pos - player_pos);
	vec2 vup = vec2(0.0, 1.0);
	float signed_angle = atan(vup.x*pd.y - vup.y*pd.x, vup.x*pd.x + vup.y*pd.y);
	
	float rotation = mix(signed_angle, wind * 0.1, pm);
	VERTEX = rotateUV(VERTEX, rotation, vec2(0.0));
}

void fragment(){
	// Get random number using world position
	vec2 rand_uv = world_pos;
	vec2 rand_tex_size = vec2(textureSize(random_noise, 0));
	rand_uv.x = mod(rand_uv.x, rand_tex_size.x);
	rand_uv.y = mod(rand_uv.y, rand_tex_size.y);
	float rand = texelFetch(random_noise, ivec2(rand_uv), 0).r;
	float ff = float(frames);
	rand = round(rand * ff);
	
	// Pick a random grass blade type from spritesheet
	float frame_number = rand;
	float fr = 1.0 / float(max(frames, 1));
	float x_coord = mix(fr * frame_number, fr * frame_number + fr, UV.x);
	vec2 midpoint = vec2(fr * frame_number + fr * 0.5, 0.5);
	vec2 uv = vec2(x_coord, UV.y);
	
	// Coloring
	vec4 tex_col = texture(spritesheet, uv);
	vec3 color = mix(top_color.rgb, bottom_color.rgb, UV.y);
	color *= tex_col.rgb;
	
	COLOR = vec4(color, tex_col.a * player_mask);
}"

[sub_resource type="OpenSimplexNoise" id=3]
octaves = 2

[sub_resource type="NoiseTexture" id=4]
seamless = true
noise = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/frames = 4
shader_param/top_color = Color( 0.686275, 0.929412, 0.294118, 1 )
shader_param/bottom_color = Color( 0.313726, 0.435294, 0.172549, 1 )
shader_param/wind_scale = 0.03
shader_param/wind_speed = 0.3
shader_param/player_pos = Vector2( 0, 0 )
shader_param/player_radius = 40.0
shader_param/player_radius_blend = 40.0
shader_param/spritesheet = ExtResource( 2 )
shader_param/random_noise = ExtResource( 3 )
shader_param/wind_noise = SubResource( 4 )

[sub_resource type="ArrayMesh" id=5]
surfaces/0 = {
"aabb": AABB( -32, -32, 0, 64, 64, 0 ),
"array_data": PoolByteArray( 0, 0, 0, 66, 0, 0, 0, 66, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 0, 194, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 194, 0, 0, 0, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 194, 0, 0, 128, 63, 0, 0, 0, 0 ),
"array_index_data": PoolByteArray( 3, 0, 0, 0, 1, 0, 1, 0, 2, 0, 3, 0 ),
"blend_shape_data": [  ],
"format": 262417,
"index_count": 6,
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 4
}

[node name="Sprite" type="MeshInstance2D"]
material = SubResource( 2 )
mesh = SubResource( 5 )
texture = ExtResource( 1 )
